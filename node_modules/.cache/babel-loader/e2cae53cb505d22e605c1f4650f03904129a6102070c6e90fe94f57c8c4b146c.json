{"ast":null,"code":"'use strict';\n\nconst {\n  getBooleanOption,\n  cppdb\n} = require('../util');\nmodule.exports = function defineAggregate(name, options) {\n  // Validate arguments\n  if (typeof name !== 'string') throw new TypeError('Expected first argument to be a string');\n  if (typeof options !== 'object' || options === null) throw new TypeError('Expected second argument to be an options object');\n  if (!name) throw new TypeError('User-defined function name cannot be an empty string');\n\n  // Interpret options\n  const start = 'start' in options ? options.start : null;\n  const step = getFunctionOption(options, 'step', true);\n  const inverse = getFunctionOption(options, 'inverse', false);\n  const result = getFunctionOption(options, 'result', false);\n  const safeIntegers = 'safeIntegers' in options ? +getBooleanOption(options, 'safeIntegers') : 2;\n  const deterministic = getBooleanOption(options, 'deterministic');\n  const directOnly = getBooleanOption(options, 'directOnly');\n  const varargs = getBooleanOption(options, 'varargs');\n  let argCount = -1;\n\n  // Determine argument count\n  if (!varargs) {\n    argCount = Math.max(getLength(step), inverse ? getLength(inverse) : 0);\n    if (argCount > 0) argCount -= 1;\n    if (argCount > 100) throw new RangeError('User-defined functions cannot have more than 100 arguments');\n  }\n  this[cppdb].aggregate(start, step, inverse, result, name, argCount, safeIntegers, deterministic, directOnly);\n  return this;\n};\nconst getFunctionOption = (options, key, required) => {\n  const value = key in options ? options[key] : null;\n  if (typeof value === 'function') return value;\n  if (value != null) throw new TypeError(`Expected the \"${key}\" option to be a function`);\n  if (required) throw new TypeError(`Missing required option \"${key}\"`);\n  return null;\n};\nconst getLength = ({\n  length\n}) => {\n  if (Number.isInteger(length) && length >= 0) return length;\n  throw new TypeError('Expected function.length to be a positive integer');\n};","map":{"version":3,"names":["getBooleanOption","cppdb","require","module","exports","defineAggregate","name","options","TypeError","start","step","getFunctionOption","inverse","result","safeIntegers","deterministic","directOnly","varargs","argCount","Math","max","getLength","RangeError","aggregate","key","required","value","length","Number","isInteger"],"sources":["C:/Users/Highcastle/Documents/Cidadão+ Consulta Pública/node_modules/better-sqlite3/lib/methods/aggregate.js"],"sourcesContent":["'use strict';\nconst { getBooleanOption, cppdb } = require('../util');\n\nmodule.exports = function defineAggregate(name, options) {\n\t// Validate arguments\n\tif (typeof name !== 'string') throw new TypeError('Expected first argument to be a string');\n\tif (typeof options !== 'object' || options === null) throw new TypeError('Expected second argument to be an options object');\n\tif (!name) throw new TypeError('User-defined function name cannot be an empty string');\n\n\t// Interpret options\n\tconst start = 'start' in options ? options.start : null;\n\tconst step = getFunctionOption(options, 'step', true);\n\tconst inverse = getFunctionOption(options, 'inverse', false);\n\tconst result = getFunctionOption(options, 'result', false);\n\tconst safeIntegers = 'safeIntegers' in options ? +getBooleanOption(options, 'safeIntegers') : 2;\n\tconst deterministic = getBooleanOption(options, 'deterministic');\n\tconst directOnly = getBooleanOption(options, 'directOnly');\n\tconst varargs = getBooleanOption(options, 'varargs');\n\tlet argCount = -1;\n\n\t// Determine argument count\n\tif (!varargs) {\n\t\targCount = Math.max(getLength(step), inverse ? getLength(inverse) : 0);\n\t\tif (argCount > 0) argCount -= 1;\n\t\tif (argCount > 100) throw new RangeError('User-defined functions cannot have more than 100 arguments');\n\t}\n\n\tthis[cppdb].aggregate(start, step, inverse, result, name, argCount, safeIntegers, deterministic, directOnly);\n\treturn this;\n};\n\nconst getFunctionOption = (options, key, required) => {\n\tconst value = key in options ? options[key] : null;\n\tif (typeof value === 'function') return value;\n\tif (value != null) throw new TypeError(`Expected the \"${key}\" option to be a function`);\n\tif (required) throw new TypeError(`Missing required option \"${key}\"`);\n\treturn null;\n};\n\nconst getLength = ({ length }) => {\n\tif (Number.isInteger(length) && length >= 0) return length;\n\tthrow new TypeError('Expected function.length to be a positive integer');\n};\n"],"mappings":"AAAA,YAAY;;AACZ,MAAM;EAAEA,gBAAgB;EAAEC;AAAM,CAAC,GAAGC,OAAO,CAAC,SAAS,CAAC;AAEtDC,MAAM,CAACC,OAAO,GAAG,SAASC,eAAeA,CAACC,IAAI,EAAEC,OAAO,EAAE;EACxD;EACA,IAAI,OAAOD,IAAI,KAAK,QAAQ,EAAE,MAAM,IAAIE,SAAS,CAAC,wCAAwC,CAAC;EAC3F,IAAI,OAAOD,OAAO,KAAK,QAAQ,IAAIA,OAAO,KAAK,IAAI,EAAE,MAAM,IAAIC,SAAS,CAAC,kDAAkD,CAAC;EAC5H,IAAI,CAACF,IAAI,EAAE,MAAM,IAAIE,SAAS,CAAC,sDAAsD,CAAC;;EAEtF;EACA,MAAMC,KAAK,GAAG,OAAO,IAAIF,OAAO,GAAGA,OAAO,CAACE,KAAK,GAAG,IAAI;EACvD,MAAMC,IAAI,GAAGC,iBAAiB,CAACJ,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC;EACrD,MAAMK,OAAO,GAAGD,iBAAiB,CAACJ,OAAO,EAAE,SAAS,EAAE,KAAK,CAAC;EAC5D,MAAMM,MAAM,GAAGF,iBAAiB,CAACJ,OAAO,EAAE,QAAQ,EAAE,KAAK,CAAC;EAC1D,MAAMO,YAAY,GAAG,cAAc,IAAIP,OAAO,GAAG,CAACP,gBAAgB,CAACO,OAAO,EAAE,cAAc,CAAC,GAAG,CAAC;EAC/F,MAAMQ,aAAa,GAAGf,gBAAgB,CAACO,OAAO,EAAE,eAAe,CAAC;EAChE,MAAMS,UAAU,GAAGhB,gBAAgB,CAACO,OAAO,EAAE,YAAY,CAAC;EAC1D,MAAMU,OAAO,GAAGjB,gBAAgB,CAACO,OAAO,EAAE,SAAS,CAAC;EACpD,IAAIW,QAAQ,GAAG,CAAC,CAAC;;EAEjB;EACA,IAAI,CAACD,OAAO,EAAE;IACbC,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAACC,SAAS,CAACX,IAAI,CAAC,EAAEE,OAAO,GAAGS,SAAS,CAACT,OAAO,CAAC,GAAG,CAAC,CAAC;IACtE,IAAIM,QAAQ,GAAG,CAAC,EAAEA,QAAQ,IAAI,CAAC;IAC/B,IAAIA,QAAQ,GAAG,GAAG,EAAE,MAAM,IAAII,UAAU,CAAC,4DAA4D,CAAC;EACvG;EAEA,IAAI,CAACrB,KAAK,CAAC,CAACsB,SAAS,CAACd,KAAK,EAAEC,IAAI,EAAEE,OAAO,EAAEC,MAAM,EAAEP,IAAI,EAAEY,QAAQ,EAAEJ,YAAY,EAAEC,aAAa,EAAEC,UAAU,CAAC;EAC5G,OAAO,IAAI;AACZ,CAAC;AAED,MAAML,iBAAiB,GAAGA,CAACJ,OAAO,EAAEiB,GAAG,EAAEC,QAAQ,KAAK;EACrD,MAAMC,KAAK,GAAGF,GAAG,IAAIjB,OAAO,GAAGA,OAAO,CAACiB,GAAG,CAAC,GAAG,IAAI;EAClD,IAAI,OAAOE,KAAK,KAAK,UAAU,EAAE,OAAOA,KAAK;EAC7C,IAAIA,KAAK,IAAI,IAAI,EAAE,MAAM,IAAIlB,SAAS,CAAC,iBAAiBgB,GAAG,2BAA2B,CAAC;EACvF,IAAIC,QAAQ,EAAE,MAAM,IAAIjB,SAAS,CAAC,4BAA4BgB,GAAG,GAAG,CAAC;EACrE,OAAO,IAAI;AACZ,CAAC;AAED,MAAMH,SAAS,GAAGA,CAAC;EAAEM;AAAO,CAAC,KAAK;EACjC,IAAIC,MAAM,CAACC,SAAS,CAACF,MAAM,CAAC,IAAIA,MAAM,IAAI,CAAC,EAAE,OAAOA,MAAM;EAC1D,MAAM,IAAInB,SAAS,CAAC,mDAAmD,CAAC;AACzE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}