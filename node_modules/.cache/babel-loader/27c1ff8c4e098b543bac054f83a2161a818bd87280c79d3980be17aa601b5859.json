{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Highcastle\\\\Documents\\\\Cidad\\xE3o+ Consulta P\\xFAblica\\\\src\\\\contexts\\\\FormContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormContext = /*#__PURE__*/createContext();\nexport const useForm = () => {\n  _s();\n  const context = useContext(FormContext);\n  if (!context) {\n    throw new Error('useForm must be used within a FormProvider');\n  }\n  return context;\n};\n_s(useForm, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const FormProvider = ({\n  children\n}) => {\n  _s2();\n  const [forms, setForms] = useState([]);\n  const [responses, setResponses] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // Load data from localStorage on mount\n  useEffect(() => {\n    const storedForms = localStorage.getItem('forms');\n    const storedResponses = localStorage.getItem('formResponses');\n    if (storedForms) {\n      setForms(JSON.parse(storedForms));\n    }\n    if (storedResponses) {\n      setResponses(JSON.parse(storedResponses));\n    }\n  }, []);\n\n  // Save data to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('forms', JSON.stringify(forms));\n  }, [forms]);\n  useEffect(() => {\n    localStorage.setItem('formResponses', JSON.stringify(responses));\n  }, [responses]);\n  const createForm = async formData => {\n    setLoading(true);\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      const newForm = {\n        id: uuidv4(),\n        ...formData,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString(),\n        isActive: true\n      };\n      setForms(prev => [...prev, newForm]);\n      toast.success('Form created successfully!');\n      return {\n        success: true,\n        form: newForm\n      };\n    } catch (error) {\n      toast.error('Failed to create form');\n      return {\n        success: false,\n        error: error.message\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const updateForm = async (formId, formData) => {\n    setLoading(true);\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      setForms(prev => prev.map(form => form.id === formId ? {\n        ...form,\n        ...formData,\n        updatedAt: new Date().toISOString()\n      } : form));\n      toast.success('Form updated successfully!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      toast.error('Failed to update form');\n      return {\n        success: false,\n        error: error.message\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const deleteForm = async formId => {\n    setLoading(true);\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      setForms(prev => prev.filter(form => form.id !== formId));\n      setResponses(prev => prev.filter(response => response.formId !== formId));\n      toast.success('Form deleted successfully!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      toast.error('Failed to delete form');\n      return {\n        success: false,\n        error: error.message\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const submitResponse = async (formId, responseData, userId) => {\n    setLoading(true);\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // Check if user already responded to this form\n      const existingResponse = responses.find(response => response.formId === formId && response.userId === userId);\n      if (existingResponse) {\n        throw new Error('You have already responded to this form');\n      }\n      const newResponse = {\n        id: uuidv4(),\n        formId,\n        userId,\n        data: responseData,\n        submittedAt: new Date().toISOString()\n      };\n      setResponses(prev => [...prev, newResponse]);\n      toast.success('Response submitted successfully!');\n      return {\n        success: true,\n        response: newResponse\n      };\n    } catch (error) {\n      toast.error(error.message || 'Failed to submit response');\n      return {\n        success: false,\n        error: error.message\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getFormById = formId => {\n    return forms.find(form => form.id === formId);\n  };\n  const getFormResponses = formId => {\n    return responses.filter(response => response.formId === formId);\n  };\n  const getUserResponses = userId => {\n    return responses.filter(response => response.userId === userId);\n  };\n  const getActiveForms = () => {\n    return forms.filter(form => form.isActive);\n  };\n  const getFormResponseCount = formId => {\n    return responses.filter(response => response.formId === formId).length;\n  };\n  const hasUserResponded = (formId, userId) => {\n    return responses.some(response => response.formId === formId && response.userId === userId);\n  };\n  const value = {\n    forms,\n    responses,\n    loading,\n    createForm,\n    updateForm,\n    deleteForm,\n    submitResponse,\n    getFormById,\n    getFormResponses,\n    getUserResponses,\n    getActiveForms,\n    getFormResponseCount,\n    hasUserResponded\n  };\n  return /*#__PURE__*/_jsxDEV(FormContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n};\n_s2(FormProvider, \"h5MjaqwwpBwx6bdD2/8YHg1bZy4=\");\n_c = FormProvider;\nvar _c;\n$RefreshReg$(_c, \"FormProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","v4","uuidv4","toast","jsxDEV","_jsxDEV","FormContext","useForm","_s","context","Error","FormProvider","children","_s2","forms","setForms","responses","setResponses","loading","setLoading","storedForms","localStorage","getItem","storedResponses","JSON","parse","setItem","stringify","createForm","formData","Promise","resolve","setTimeout","newForm","id","createdAt","Date","toISOString","updatedAt","isActive","prev","success","form","error","message","updateForm","formId","map","deleteForm","filter","response","submitResponse","responseData","userId","existingResponse","find","newResponse","data","submittedAt","getFormById","getFormResponses","getUserResponses","getActiveForms","getFormResponseCount","length","hasUserResponded","some","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Highcastle/Documents/CidadÃ£o+ Consulta PÃºblica/src/contexts/FormContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst FormContext = createContext();\r\n\r\nexport const useForm = () => {\r\n  const context = useContext(FormContext);\r\n  if (!context) {\r\n    throw new Error('useForm must be used within a FormProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const FormProvider = ({ children }) => {\r\n  const [forms, setForms] = useState([]);\r\n  const [responses, setResponses] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Load data from localStorage on mount\r\n  useEffect(() => {\r\n    const storedForms = localStorage.getItem('forms');\r\n    const storedResponses = localStorage.getItem('formResponses');\r\n    \r\n    if (storedForms) {\r\n      setForms(JSON.parse(storedForms));\r\n    }\r\n    \r\n    if (storedResponses) {\r\n      setResponses(JSON.parse(storedResponses));\r\n    }\r\n  }, []);\r\n\r\n  // Save data to localStorage whenever it changes\r\n  useEffect(() => {\r\n    localStorage.setItem('forms', JSON.stringify(forms));\r\n  }, [forms]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('formResponses', JSON.stringify(responses));\r\n  }, [responses]);\r\n\r\n  const createForm = async (formData) => {\r\n    setLoading(true);\r\n    try {\r\n      // Simulate API call\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      const newForm = {\r\n        id: uuidv4(),\r\n        ...formData,\r\n        createdAt: new Date().toISOString(),\r\n        updatedAt: new Date().toISOString(),\r\n        isActive: true\r\n      };\r\n\r\n      setForms(prev => [...prev, newForm]);\r\n      toast.success('Form created successfully!');\r\n      return { success: true, form: newForm };\r\n    } catch (error) {\r\n      toast.error('Failed to create form');\r\n      return { success: false, error: error.message };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateForm = async (formId, formData) => {\r\n    setLoading(true);\r\n    try {\r\n      // Simulate API call\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      setForms(prev => prev.map(form => \r\n        form.id === formId \r\n          ? { ...form, ...formData, updatedAt: new Date().toISOString() }\r\n          : form\r\n      ));\r\n      \r\n      toast.success('Form updated successfully!');\r\n      return { success: true };\r\n    } catch (error) {\r\n      toast.error('Failed to update form');\r\n      return { success: false, error: error.message };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const deleteForm = async (formId) => {\r\n    setLoading(true);\r\n    try {\r\n      // Simulate API call\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      setForms(prev => prev.filter(form => form.id !== formId));\r\n      setResponses(prev => prev.filter(response => response.formId !== formId));\r\n      \r\n      toast.success('Form deleted successfully!');\r\n      return { success: true };\r\n    } catch (error) {\r\n      toast.error('Failed to delete form');\r\n      return { success: false, error: error.message };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const submitResponse = async (formId, responseData, userId) => {\r\n    setLoading(true);\r\n    try {\r\n      // Simulate API call\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      // Check if user already responded to this form\r\n      const existingResponse = responses.find(\r\n        response => response.formId === formId && response.userId === userId\r\n      );\r\n      \r\n      if (existingResponse) {\r\n        throw new Error('You have already responded to this form');\r\n      }\r\n\r\n      const newResponse = {\r\n        id: uuidv4(),\r\n        formId,\r\n        userId,\r\n        data: responseData,\r\n        submittedAt: new Date().toISOString()\r\n      };\r\n\r\n      setResponses(prev => [...prev, newResponse]);\r\n      toast.success('Response submitted successfully!');\r\n      return { success: true, response: newResponse };\r\n    } catch (error) {\r\n      toast.error(error.message || 'Failed to submit response');\r\n      return { success: false, error: error.message };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getFormById = (formId) => {\r\n    return forms.find(form => form.id === formId);\r\n  };\r\n\r\n  const getFormResponses = (formId) => {\r\n    return responses.filter(response => response.formId === formId);\r\n  };\r\n\r\n  const getUserResponses = (userId) => {\r\n    return responses.filter(response => response.userId === userId);\r\n  };\r\n\r\n  const getActiveForms = () => {\r\n    return forms.filter(form => form.isActive);\r\n  };\r\n\r\n  const getFormResponseCount = (formId) => {\r\n    return responses.filter(response => response.formId === formId).length;\r\n  };\r\n\r\n  const hasUserResponded = (formId, userId) => {\r\n    return responses.some(response => \r\n      response.formId === formId && response.userId === userId\r\n    );\r\n  };\r\n\r\n  const value = {\r\n    forms,\r\n    responses,\r\n    loading,\r\n    createForm,\r\n    updateForm,\r\n    deleteForm,\r\n    submitResponse,\r\n    getFormById,\r\n    getFormResponses,\r\n    getUserResponses,\r\n    getActiveForms,\r\n    getFormResponseCount,\r\n    hasUserResponded\r\n  };\r\n\r\n  return (\r\n    <FormContext.Provider value={value}>\r\n      {children}\r\n    </FormContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}