{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect,useCallback}from'react';import toast from'react-hot-toast';import apiService from'../services/api';import{jsx as _jsx}from\"react/jsx-runtime\";const FormContext=/*#__PURE__*/createContext();export const useForm=()=>{const context=useContext(FormContext);if(!context){throw new Error('useForm must be used within a FormProvider');}return context;};export const FormProvider=_ref=>{let{children}=_ref;const[forms,setForms]=useState([]);const[responses,setResponses]=useState([]);const[loading,setLoading]=useState(false);// Load data from database on mount\nuseEffect(()=>{loadData();},[loadData]);const loadData=useCallback(async()=>{try{const response=await apiService.getAllForms();if(response.success){setForms(response.forms);// Responses will be loaded per form when needed\nsetResponses([]);}}catch(error){console.error('Error loading data:',error);}},[]);const createForm=useCallback(async formData=>{setLoading(true);try{const response=await apiService.createForm(formData);if(response.success){// Reload forms to get the updated list\nconst updatedResponse=await apiService.getAllForms();if(updatedResponse.success){setForms(updatedResponse.forms);}toast.success('Form created successfully!');return{success:true,formId:response.form.id};}}catch(error){toast.error('Failed to create form');return{success:false,error:error.message};}finally{setLoading(false);}},[]);const updateForm=useCallback(async(formId,formData)=>{setLoading(true);try{const response=await apiService.updateForm(formId,formData);if(response.success){// Reload forms to get the updated list\nconst updatedResponse=await apiService.getAllForms();if(updatedResponse.success){setForms(updatedResponse.forms);}toast.success('Form updated successfully!');return{success:true};}}catch(error){toast.error('Failed to update form');return{success:false,error:error.message};}finally{setLoading(false);}},[]);const deleteForm=useCallback(async formId=>{setLoading(true);try{const response=await apiService.deleteForm(formId);if(response.success){// Reload forms to get the updated list\nconst updatedResponse=await apiService.getAllForms();if(updatedResponse.success){setForms(updatedResponse.forms);}toast.success('Form deleted successfully!');return{success:true};}}catch(error){toast.error('Failed to delete form');return{success:false,error:error.message};}finally{setLoading(false);}},[]);const submitResponse=useCallback(async(formId,responseData,userId)=>{setLoading(true);try{const response=await apiService.submitFormResponse(formId,responseData);if(response.success){toast.success('Response submitted successfully!');return{success:true};}}catch(error){toast.error(error.message||'Failed to submit response');return{success:false,error:error.message};}finally{setLoading(false);}},[]);const getFormById=useCallback(async formId=>{try{const response=await apiService.getFormById(formId);return response.success?response.form:null;}catch(error){console.error('Error getting form by ID:',error);return null;}},[]);const getFormResponses=useCallback(async formId=>{try{const response=await apiService.getFormResponses(formId);return response.success?response.responses:[];}catch(error){console.error('Error getting form responses:',error);return[];}},[]);const getUserResponses=useCallback(async userId=>{try{const response=await apiService.getUserResponses();return response.success?response.responses:[];}catch(error){console.error('Error getting user responses:',error);return[];}},[]);const getActiveForms=useCallback(async()=>{try{const response=await apiService.getActiveForms();return response.success?response.forms:[];}catch(error){console.error('Error getting active forms:',error);return[];}},[]);const getFormResponseCount=useCallback(async formId=>{try{const form=await getFormById(formId);return form?form.responseCount:0;}catch(error){console.error('Error getting form response count:',error);return 0;}},[getFormById]);const hasUserResponded=useCallback(async(formId,userId)=>{try{const form=await getFormById(formId);return form?form.hasResponded:false;}catch(error){console.error('Error checking user response:',error);return false;}},[getFormById]);const getStatistics=useCallback(async()=>{try{const response=await apiService.getStatistics();return response.success?response.stats:{totalUsers:0,totalForms:0,totalResponses:0,activeForms:0};}catch(error){console.error('Error getting statistics:',error);return{totalUsers:0,totalForms:0,totalResponses:0,activeForms:0};}},[]);const value={forms,responses,loading,createForm,updateForm,deleteForm,submitResponse,getFormById,getFormResponses,getUserResponses,getActiveForms,getFormResponseCount,hasUserResponded,getStatistics,loadData};return/*#__PURE__*/_jsx(FormContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useCallback","toast","apiService","jsx","_jsx","FormContext","useForm","context","Error","FormProvider","_ref","children","forms","setForms","responses","setResponses","loading","setLoading","loadData","response","getAllForms","success","error","console","createForm","formData","updatedResponse","formId","form","id","message","updateForm","deleteForm","submitResponse","responseData","userId","submitFormResponse","getFormById","getFormResponses","getUserResponses","getActiveForms","getFormResponseCount","responseCount","hasUserResponded","hasResponded","getStatistics","stats","totalUsers","totalForms","totalResponses","activeForms","value","Provider"],"sources":["C:/Users/Highcastle/Documents/Cidadão+ Consulta Pública/src/contexts/FormContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\nimport toast from 'react-hot-toast';\nimport apiService from '../services/api';\n\nconst FormContext = createContext();\n\nexport const useForm = () => {\n  const context = useContext(FormContext);\n  if (!context) {\n    throw new Error('useForm must be used within a FormProvider');\n  }\n  return context;\n};\n\nexport const FormProvider = ({ children }) => {\n  const [forms, setForms] = useState([]);\n  const [responses, setResponses] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // Load data from database on mount\n  useEffect(() => {\n    loadData();\n  }, [loadData]);\n\n  const loadData = useCallback(async () => {\n    try {\n      const response = await apiService.getAllForms();\n      if (response.success) {\n        setForms(response.forms);\n        // Responses will be loaded per form when needed\n        setResponses([]);\n      }\n    } catch (error) {\n      console.error('Error loading data:', error);\n    }\n  }, []);\n\n  const createForm = useCallback(async (formData) => {\n    setLoading(true);\n    try {\n      const response = await apiService.createForm(formData);\n      \n      if (response.success) {\n        // Reload forms to get the updated list\n        const updatedResponse = await apiService.getAllForms();\n        if (updatedResponse.success) {\n          setForms(updatedResponse.forms);\n        }\n        toast.success('Form created successfully!');\n        return { success: true, formId: response.form.id };\n      }\n    } catch (error) {\n      toast.error('Failed to create form');\n      return { success: false, error: error.message };\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  const updateForm = useCallback(async (formId, formData) => {\n    setLoading(true);\n    try {\n      const response = await apiService.updateForm(formId, formData);\n      \n      if (response.success) {\n        // Reload forms to get the updated list\n        const updatedResponse = await apiService.getAllForms();\n        if (updatedResponse.success) {\n          setForms(updatedResponse.forms);\n        }\n        \n        toast.success('Form updated successfully!');\n        return { success: true };\n      }\n    } catch (error) {\n      toast.error('Failed to update form');\n      return { success: false, error: error.message };\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  const deleteForm = useCallback(async (formId) => {\n    setLoading(true);\n    try {\n      const response = await apiService.deleteForm(formId);\n      \n      if (response.success) {\n        // Reload forms to get the updated list\n        const updatedResponse = await apiService.getAllForms();\n        if (updatedResponse.success) {\n          setForms(updatedResponse.forms);\n        }\n        \n        toast.success('Form deleted successfully!');\n        return { success: true };\n      }\n    } catch (error) {\n      toast.error('Failed to delete form');\n      return { success: false, error: error.message };\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  const submitResponse = useCallback(async (formId, responseData, userId) => {\n    setLoading(true);\n    try {\n      const response = await apiService.submitFormResponse(formId, responseData);\n      \n      if (response.success) {\n        toast.success('Response submitted successfully!');\n        return { success: true };\n      }\n    } catch (error) {\n      toast.error(error.message || 'Failed to submit response');\n      return { success: false, error: error.message };\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  const getFormById = useCallback(async (formId) => {\n    try {\n      const response = await apiService.getFormById(formId);\n      return response.success ? response.form : null;\n    } catch (error) {\n      console.error('Error getting form by ID:', error);\n      return null;\n    }\n  }, []);\n\n  const getFormResponses = useCallback(async (formId) => {\n    try {\n      const response = await apiService.getFormResponses(formId);\n      return response.success ? response.responses : [];\n    } catch (error) {\n      console.error('Error getting form responses:', error);\n      return [];\n    }\n  }, []);\n\n  const getUserResponses = useCallback(async (userId) => {\n    try {\n      const response = await apiService.getUserResponses();\n      return response.success ? response.responses : [];\n    } catch (error) {\n      console.error('Error getting user responses:', error);\n      return [];\n    }\n  }, []);\n\n  const getActiveForms = useCallback(async () => {\n    try {\n      const response = await apiService.getActiveForms();\n      return response.success ? response.forms : [];\n    } catch (error) {\n      console.error('Error getting active forms:', error);\n      return [];\n    }\n  }, []);\n\n  const getFormResponseCount = useCallback(async (formId) => {\n    try {\n      const form = await getFormById(formId);\n      return form ? form.responseCount : 0;\n    } catch (error) {\n      console.error('Error getting form response count:', error);\n      return 0;\n    }\n  }, [getFormById]);\n\n  const hasUserResponded = useCallback(async (formId, userId) => {\n    try {\n      const form = await getFormById(formId);\n      return form ? form.hasResponded : false;\n    } catch (error) {\n      console.error('Error checking user response:', error);\n      return false;\n    }\n  }, [getFormById]);\n\n  const getStatistics = useCallback(async () => {\n    try {\n      const response = await apiService.getStatistics();\n      return response.success ? response.stats : { totalUsers: 0, totalForms: 0, totalResponses: 0, activeForms: 0 };\n    } catch (error) {\n      console.error('Error getting statistics:', error);\n      return { totalUsers: 0, totalForms: 0, totalResponses: 0, activeForms: 0 };\n    }\n  }, []);\n\n  const value = {\n    forms,\n    responses,\n    loading,\n    createForm,\n    updateForm,\n    deleteForm,\n    submitResponse,\n    getFormById,\n    getFormResponses,\n    getUserResponses,\n    getActiveForms,\n    getFormResponseCount,\n    hasUserResponded,\n    getStatistics,\n    loadData\n  };\n\n  return (\n    <FormContext.Provider value={value}>\n      {children}\n    </FormContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}