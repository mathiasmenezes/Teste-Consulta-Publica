{"ast":null,"code":"'use strict';\n\nconst {\n  getBooleanOption,\n  cppdb\n} = require('../util');\nmodule.exports = function defineFunction(name, options, fn) {\n  // Apply defaults\n  if (options == null) options = {};\n  if (typeof options === 'function') {\n    fn = options;\n    options = {};\n  }\n\n  // Validate arguments\n  if (typeof name !== 'string') throw new TypeError('Expected first argument to be a string');\n  if (typeof fn !== 'function') throw new TypeError('Expected last argument to be a function');\n  if (typeof options !== 'object') throw new TypeError('Expected second argument to be an options object');\n  if (!name) throw new TypeError('User-defined function name cannot be an empty string');\n\n  // Interpret options\n  const safeIntegers = 'safeIntegers' in options ? +getBooleanOption(options, 'safeIntegers') : 2;\n  const deterministic = getBooleanOption(options, 'deterministic');\n  const directOnly = getBooleanOption(options, 'directOnly');\n  const varargs = getBooleanOption(options, 'varargs');\n  let argCount = -1;\n\n  // Determine argument count\n  if (!varargs) {\n    argCount = fn.length;\n    if (!Number.isInteger(argCount) || argCount < 0) throw new TypeError('Expected function.length to be a positive integer');\n    if (argCount > 100) throw new RangeError('User-defined functions cannot have more than 100 arguments');\n  }\n  this[cppdb].function(fn, name, argCount, safeIntegers, deterministic, directOnly);\n  return this;\n};","map":{"version":3,"names":["getBooleanOption","cppdb","require","module","exports","defineFunction","name","options","fn","TypeError","safeIntegers","deterministic","directOnly","varargs","argCount","length","Number","isInteger","RangeError","function"],"sources":["C:/Users/Highcastle/Documents/Cidadão+ Consulta Pública/node_modules/better-sqlite3/lib/methods/function.js"],"sourcesContent":["'use strict';\nconst { getBooleanOption, cppdb } = require('../util');\n\nmodule.exports = function defineFunction(name, options, fn) {\n\t// Apply defaults\n\tif (options == null) options = {};\n\tif (typeof options === 'function') { fn = options; options = {}; }\n\n\t// Validate arguments\n\tif (typeof name !== 'string') throw new TypeError('Expected first argument to be a string');\n\tif (typeof fn !== 'function') throw new TypeError('Expected last argument to be a function');\n\tif (typeof options !== 'object') throw new TypeError('Expected second argument to be an options object');\n\tif (!name) throw new TypeError('User-defined function name cannot be an empty string');\n\n\t// Interpret options\n\tconst safeIntegers = 'safeIntegers' in options ? +getBooleanOption(options, 'safeIntegers') : 2;\n\tconst deterministic = getBooleanOption(options, 'deterministic');\n\tconst directOnly = getBooleanOption(options, 'directOnly');\n\tconst varargs = getBooleanOption(options, 'varargs');\n\tlet argCount = -1;\n\n\t// Determine argument count\n\tif (!varargs) {\n\t\targCount = fn.length;\n\t\tif (!Number.isInteger(argCount) || argCount < 0) throw new TypeError('Expected function.length to be a positive integer');\n\t\tif (argCount > 100) throw new RangeError('User-defined functions cannot have more than 100 arguments');\n\t}\n\n\tthis[cppdb].function(fn, name, argCount, safeIntegers, deterministic, directOnly);\n\treturn this;\n};\n"],"mappings":"AAAA,YAAY;;AACZ,MAAM;EAAEA,gBAAgB;EAAEC;AAAM,CAAC,GAAGC,OAAO,CAAC,SAAS,CAAC;AAEtDC,MAAM,CAACC,OAAO,GAAG,SAASC,cAAcA,CAACC,IAAI,EAAEC,OAAO,EAAEC,EAAE,EAAE;EAC3D;EACA,IAAID,OAAO,IAAI,IAAI,EAAEA,OAAO,GAAG,CAAC,CAAC;EACjC,IAAI,OAAOA,OAAO,KAAK,UAAU,EAAE;IAAEC,EAAE,GAAGD,OAAO;IAAEA,OAAO,GAAG,CAAC,CAAC;EAAE;;EAEjE;EACA,IAAI,OAAOD,IAAI,KAAK,QAAQ,EAAE,MAAM,IAAIG,SAAS,CAAC,wCAAwC,CAAC;EAC3F,IAAI,OAAOD,EAAE,KAAK,UAAU,EAAE,MAAM,IAAIC,SAAS,CAAC,yCAAyC,CAAC;EAC5F,IAAI,OAAOF,OAAO,KAAK,QAAQ,EAAE,MAAM,IAAIE,SAAS,CAAC,kDAAkD,CAAC;EACxG,IAAI,CAACH,IAAI,EAAE,MAAM,IAAIG,SAAS,CAAC,sDAAsD,CAAC;;EAEtF;EACA,MAAMC,YAAY,GAAG,cAAc,IAAIH,OAAO,GAAG,CAACP,gBAAgB,CAACO,OAAO,EAAE,cAAc,CAAC,GAAG,CAAC;EAC/F,MAAMI,aAAa,GAAGX,gBAAgB,CAACO,OAAO,EAAE,eAAe,CAAC;EAChE,MAAMK,UAAU,GAAGZ,gBAAgB,CAACO,OAAO,EAAE,YAAY,CAAC;EAC1D,MAAMM,OAAO,GAAGb,gBAAgB,CAACO,OAAO,EAAE,SAAS,CAAC;EACpD,IAAIO,QAAQ,GAAG,CAAC,CAAC;;EAEjB;EACA,IAAI,CAACD,OAAO,EAAE;IACbC,QAAQ,GAAGN,EAAE,CAACO,MAAM;IACpB,IAAI,CAACC,MAAM,CAACC,SAAS,CAACH,QAAQ,CAAC,IAAIA,QAAQ,GAAG,CAAC,EAAE,MAAM,IAAIL,SAAS,CAAC,mDAAmD,CAAC;IACzH,IAAIK,QAAQ,GAAG,GAAG,EAAE,MAAM,IAAII,UAAU,CAAC,4DAA4D,CAAC;EACvG;EAEA,IAAI,CAACjB,KAAK,CAAC,CAACkB,QAAQ,CAACX,EAAE,EAAEF,IAAI,EAAEQ,QAAQ,EAAEJ,YAAY,EAAEC,aAAa,EAAEC,UAAU,CAAC;EACjF,OAAO,IAAI;AACZ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}