{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect,useCallback}from'react';import toast from'react-hot-toast';import apiService from'../services/api';import{jsx as _jsx}from\"react/jsx-runtime\";const FormContext=/*#__PURE__*/createContext();export const useForm=()=>{const context=useContext(FormContext);if(!context){throw new Error('useForm must be used within a FormProvider');}return context;};export const FormProvider=_ref=>{let{children}=_ref;const[forms,setForms]=useState([]);const[responses,setResponses]=useState([]);const[loading,setLoading]=useState(false);const loadData=useCallback(async()=>{try{const response=await apiService.getAllForms();if(response.success){setForms(response.forms);// Responses will be loaded per form when needed\nsetResponses([]);}}catch(error){console.error('Error loading data:',error);}},[]);// Load data from database on mount\nuseEffect(()=>{loadData();},[loadData]);const createForm=useCallback(async formData=>{setLoading(true);try{const response=await apiService.createForm(formData);if(response.success){// Reload forms to get the updated list\nconst updatedResponse=await apiService.getAllForms();if(updatedResponse.success){setForms(updatedResponse.forms);}toast.success('Form created successfully!');return{success:true,formId:response.form.id};}}catch(error){toast.error('Failed to create form');return{success:false,error:error.message};}finally{setLoading(false);}},[]);const updateForm=useCallback(async(formId,formData)=>{setLoading(true);try{const response=await apiService.updateForm(formId,formData);if(response.success){// Reload forms to get the updated list\nconst updatedResponse=await apiService.getAllForms();if(updatedResponse.success){setForms(updatedResponse.forms);}toast.success('Form updated successfully!');return{success:true};}}catch(error){toast.error('Failed to update form');return{success:false,error:error.message};}finally{setLoading(false);}},[]);const deleteForm=useCallback(async formId=>{setLoading(true);try{const response=await apiService.deleteForm(formId);if(response.success){// Reload forms to get the updated list\nconst updatedResponse=await apiService.getAllForms();if(updatedResponse.success){setForms(updatedResponse.forms);}toast.success('Form deleted successfully!');return{success:true};}}catch(error){toast.error('Failed to delete form');return{success:false,error:error.message};}finally{setLoading(false);}},[]);const getFormById=useCallback(async formId=>{try{const response=await apiService.getFormById(formId);if(response.success){return response.form;}return null;}catch(error){console.error('Error getting form:',error);return null;}},[]);const submitResponse=useCallback(async(formId,responseData)=>{setLoading(true);try{const response=await apiService.submitResponse(formId,responseData);if(response.success){toast.success('Response submitted successfully!');return{success:true};}}catch(error){toast.error('Failed to submit response');return{success:false,error:error.message};}finally{setLoading(false);}},[]);const getFormResponses=useCallback(async formId=>{try{const response=await apiService.getFormResponses(formId);if(response.success){setResponses(response.responses);return response.responses;}return[];}catch(error){console.error('Error getting form responses:',error);return[];}},[]);const hasUserResponded=useCallback(async(formId,userId)=>{try{const response=await apiService.hasUserResponded(formId,userId);return response.hasResponded;}catch(error){console.error('Error checking user response:',error);return false;}},[]);const exportResponses=useCallback(async function(formId){let format=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'csv';try{const response=await apiService.exportResponses(formId,format);if(response.success){// Create and download the file\nconst blob=new Blob([response.data],{type:'text/csv'});const url=window.URL.createObjectURL(blob);const a=document.createElement('a');a.href=url;a.download=\"form-responses-\".concat(formId,\".csv\");document.body.appendChild(a);a.click();window.URL.revokeObjectURL(url);document.body.removeChild(a);toast.success('Responses exported successfully!');return{success:true};}}catch(error){toast.error('Failed to export responses');return{success:false,error:error.message};}},[]);const value={forms,responses,loading,createForm,updateForm,deleteForm,getFormById,submitResponse,getFormResponses,hasUserResponded,exportResponses,loadData};return/*#__PURE__*/_jsx(FormContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useCallback","toast","apiService","jsx","_jsx","FormContext","useForm","context","Error","FormProvider","_ref","children","forms","setForms","responses","setResponses","loading","setLoading","loadData","response","getAllForms","success","error","console","createForm","formData","updatedResponse","formId","form","id","message","updateForm","deleteForm","getFormById","submitResponse","responseData","getFormResponses","hasUserResponded","userId","hasResponded","exportResponses","format","arguments","length","undefined","blob","Blob","data","type","url","window","URL","createObjectURL","a","document","createElement","href","download","concat","body","appendChild","click","revokeObjectURL","removeChild","value","Provider"],"sources":["C:/Users/Highcastle/Documents/Cidadão+ Consulta Pública/src/contexts/FormContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\nimport toast from 'react-hot-toast';\nimport apiService from '../services/api';\n\nconst FormContext = createContext();\n\nexport const useForm = () => {\n  const context = useContext(FormContext);\n  if (!context) {\n    throw new Error('useForm must be used within a FormProvider');\n  }\n  return context;\n};\n\nexport const FormProvider = ({ children }) => {\n  const [forms, setForms] = useState([]);\n  const [responses, setResponses] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const loadData = useCallback(async () => {\n    try {\n      const response = await apiService.getAllForms();\n      if (response.success) {\n        setForms(response.forms);\n        // Responses will be loaded per form when needed\n        setResponses([]);\n      }\n    } catch (error) {\n      console.error('Error loading data:', error);\n    }\n  }, []);\n\n  // Load data from database on mount\n  useEffect(() => {\n    loadData();\n  }, [loadData]);\n\n  const createForm = useCallback(async (formData) => {\n    setLoading(true);\n    try {\n      const response = await apiService.createForm(formData);\n      \n      if (response.success) {\n        // Reload forms to get the updated list\n        const updatedResponse = await apiService.getAllForms();\n        if (updatedResponse.success) {\n          setForms(updatedResponse.forms);\n        }\n        toast.success('Form created successfully!');\n        return { success: true, formId: response.form.id };\n      }\n    } catch (error) {\n      toast.error('Failed to create form');\n      return { success: false, error: error.message };\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  const updateForm = useCallback(async (formId, formData) => {\n    setLoading(true);\n    try {\n      const response = await apiService.updateForm(formId, formData);\n      \n      if (response.success) {\n        // Reload forms to get the updated list\n        const updatedResponse = await apiService.getAllForms();\n        if (updatedResponse.success) {\n          setForms(updatedResponse.forms);\n        }\n        \n        toast.success('Form updated successfully!');\n        return { success: true };\n      }\n    } catch (error) {\n      toast.error('Failed to update form');\n      return { success: false, error: error.message };\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  const deleteForm = useCallback(async (formId) => {\n    setLoading(true);\n    try {\n      const response = await apiService.deleteForm(formId);\n      \n      if (response.success) {\n        // Reload forms to get the updated list\n        const updatedResponse = await apiService.getAllForms();\n        if (updatedResponse.success) {\n          setForms(updatedResponse.forms);\n        }\n        \n        toast.success('Form deleted successfully!');\n        return { success: true };\n      }\n    } catch (error) {\n      toast.error('Failed to delete form');\n      return { success: false, error: error.message };\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  const getFormById = useCallback(async (formId) => {\n    try {\n      const response = await apiService.getFormById(formId);\n      if (response.success) {\n        return response.form;\n      }\n      return null;\n    } catch (error) {\n      console.error('Error getting form:', error);\n      return null;\n    }\n  }, []);\n\n  const submitResponse = useCallback(async (formId, responseData) => {\n    setLoading(true);\n    try {\n      const response = await apiService.submitResponse(formId, responseData);\n      \n      if (response.success) {\n        toast.success('Response submitted successfully!');\n        return { success: true };\n      }\n    } catch (error) {\n      toast.error('Failed to submit response');\n      return { success: false, error: error.message };\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  const getFormResponses = useCallback(async (formId) => {\n    try {\n      const response = await apiService.getFormResponses(formId);\n      if (response.success) {\n        setResponses(response.responses);\n        return response.responses;\n      }\n      return [];\n    } catch (error) {\n      console.error('Error getting form responses:', error);\n      return [];\n    }\n  }, []);\n\n  const hasUserResponded = useCallback(async (formId, userId) => {\n    try {\n      const response = await apiService.hasUserResponded(formId, userId);\n      return response.hasResponded;\n    } catch (error) {\n      console.error('Error checking user response:', error);\n      return false;\n    }\n  }, []);\n\n  const exportResponses = useCallback(async (formId, format = 'csv') => {\n    try {\n      const response = await apiService.exportResponses(formId, format);\n      if (response.success) {\n        // Create and download the file\n        const blob = new Blob([response.data], { type: 'text/csv' });\n        const url = window.URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = `form-responses-${formId}.csv`;\n        document.body.appendChild(a);\n        a.click();\n        window.URL.revokeObjectURL(url);\n        document.body.removeChild(a);\n        \n        toast.success('Responses exported successfully!');\n        return { success: true };\n      }\n    } catch (error) {\n      toast.error('Failed to export responses');\n      return { success: false, error: error.message };\n    }\n  }, []);\n\n  const value = {\n    forms,\n    responses,\n    loading,\n    createForm,\n    updateForm,\n    deleteForm,\n    getFormById,\n    submitResponse,\n    getFormResponses,\n    hasUserResponded,\n    exportResponses,\n    loadData\n  };\n\n  return (\n    <FormContext.Provider value={value}>\n      {children}\n    </FormContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}