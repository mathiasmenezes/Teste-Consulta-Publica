{"ast":null,"code":"'use strict';\n\nconst {\n  cppdb\n} = require('../util');\nmodule.exports = function serialize(options) {\n  if (options == null) options = {};\n\n  // Validate arguments\n  if (typeof options !== 'object') throw new TypeError('Expected first argument to be an options object');\n\n  // Interpret and validate options\n  const attachedName = 'attached' in options ? options.attached : 'main';\n  if (typeof attachedName !== 'string') throw new TypeError('Expected the \"attached\" option to be a string');\n  if (!attachedName) throw new TypeError('The \"attached\" option cannot be an empty string');\n  return this[cppdb].serialize(attachedName);\n};","map":{"version":3,"names":["cppdb","require","module","exports","serialize","options","TypeError","attachedName","attached"],"sources":["C:/Users/Highcastle/Documents/Cidadão+ Consulta Pública/node_modules/better-sqlite3/lib/methods/serialize.js"],"sourcesContent":["'use strict';\nconst { cppdb } = require('../util');\n\nmodule.exports = function serialize(options) {\n\tif (options == null) options = {};\n\n\t// Validate arguments\n\tif (typeof options !== 'object') throw new TypeError('Expected first argument to be an options object');\n\n\t// Interpret and validate options\n\tconst attachedName = 'attached' in options ? options.attached : 'main';\n\tif (typeof attachedName !== 'string') throw new TypeError('Expected the \"attached\" option to be a string');\n\tif (!attachedName) throw new TypeError('The \"attached\" option cannot be an empty string');\n\n\treturn this[cppdb].serialize(attachedName);\n};\n"],"mappings":"AAAA,YAAY;;AACZ,MAAM;EAAEA;AAAM,CAAC,GAAGC,OAAO,CAAC,SAAS,CAAC;AAEpCC,MAAM,CAACC,OAAO,GAAG,SAASC,SAASA,CAACC,OAAO,EAAE;EAC5C,IAAIA,OAAO,IAAI,IAAI,EAAEA,OAAO,GAAG,CAAC,CAAC;;EAEjC;EACA,IAAI,OAAOA,OAAO,KAAK,QAAQ,EAAE,MAAM,IAAIC,SAAS,CAAC,iDAAiD,CAAC;;EAEvG;EACA,MAAMC,YAAY,GAAG,UAAU,IAAIF,OAAO,GAAGA,OAAO,CAACG,QAAQ,GAAG,MAAM;EACtE,IAAI,OAAOD,YAAY,KAAK,QAAQ,EAAE,MAAM,IAAID,SAAS,CAAC,+CAA+C,CAAC;EAC1G,IAAI,CAACC,YAAY,EAAE,MAAM,IAAID,SAAS,CAAC,iDAAiD,CAAC;EAEzF,OAAO,IAAI,CAACN,KAAK,CAAC,CAACI,SAAS,CAACG,YAAY,CAAC;AAC3C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}